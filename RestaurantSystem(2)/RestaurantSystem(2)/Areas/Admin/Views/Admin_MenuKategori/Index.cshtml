@model IEnumerable<RestaurantSystem_2_.Models.VT.Tbl_MenuKategori>

@{
    ViewBag.Title = "Menü Kategori Yönetimi";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header bg-primary">
                        <h3 class="card-title text-white">Kategori Listesi</h3>
                        <div class="card-tools">
                            @Html.ActionLink("Yeni Kategori Ekle", "Create", null, new { @class = "btn btn-light" })
                        </div>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <table id="kategoriTable" class="table table-bordered table-hover">
                            <thead class="thead-dark">
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.KategoriAd)</th>
                                    <th>Üst Kategori</th>
                                    <th>@Html.DisplayNameFor(model => model.ResimURL)</th>
                                    <th>İşlemler</th>
                                </tr>
                            </thead>
                            <tbody>
                                
                                @foreach (var item in Model)
                                {
                                    <tr id="row-@item.ID">
                                        <td>@Html.DisplayFor(modelItem => item.KategoriAd)</td>
                                        <td>
                                            @{
                                                using (var DB = new RestaurantSystem_2_.Models.VT.RestaurantSystemEntities())
                                                {
                                                    var ustKategoriAd = item.UstKategoriID.HasValue ?
                                                                      DB.Tbl_MenuKategori.Find(item.UstKategoriID.Value)?.KategoriAd :
                                                                      "Ana Kategori";
                                                    @ustKategoriAd
                                                }
                                            }
                                        </td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(item.ResimURL))
                                            {
                                                <img src="@item.ResimURL" alt="@item.KategoriAd" style="max-height: 50px;" class="img-thumbnail" />
                                            }
                                            else
                                            {
                                                <span class="text-muted">Resim Yok</span>
                                            }
                                        </td>
                                        <td>
                                            <div class="btn-group btn-group-sm">
                                                @Html.ActionLink("Düzenle", "Edit", new { id = item.ID }, new { @class = "btn btn-info" })
                                                <button class="btn btn-danger delete-btn" data-id="@item.ID">
                                                    <i class="fas fa-trash-alt"></i> Sil
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <!-- /.card-body -->
                    <div class="card-footer clearfix">
                        <div class="float-right">
                            @Html.ActionLink("Yeni Kategori Ekle", "Create", null, new { @class = "btn btn-primary" })
                        </div>
                    </div>
                </div>
                <!-- /.card -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
    </div>
    <!-- /.container-fluid -->
</section>

<!-- DataTables & Buttons CSS -->
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/dataTables.bootstrap4.min.css">
<link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.3.2/css/buttons.bootstrap4.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<!-- DataTables & Buttons JS -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.13.4/js/dataTables.bootstrap4.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.3.2/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.3.2/js/buttons.bootstrap4.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
<script src="https://cdn.datatables.net/buttons/2.3.2/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.3.2/js/buttons.print.min.js"></script>

<!-- SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    $(document).ready(function () {
        // DataTable tanımı
        var table = $('#kategoriTable').DataTable({
            "responsive": true,
            "autoWidth": false,
            "order": [[0, "asc"]],
            "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "Tümü"]],
            "language": {
                "url": "//cdn.datatables.net/plug-ins/1.10.20/i18n/Turkish.json"
            },
            "columnDefs": [
                { "width": "15%", "targets": [3] }, // İşlemler sütunu genişliği
                { "orderable": false, "targets": [2, 3] }, // Resim ve İşlemler sütunu sıralanmasın
                { "searchable": false, "targets": [2, 3] }  // Resim ve İşlemler sütununda arama yapılmasın
            ],
            "dom": 'Bfrtip',
            "buttons": [
                {
                    extend: 'copy',
                    text: '<i class="fas fa-copy"></i> Kopyala',
                    className: 'btn btn-sm btn-secondary',
                    exportOptions: {
                        columns: ':not(:last-child)'
                    }
                },
                {
                    extend: 'excel',
                    text: '<i class="fas fa-file-excel"></i> Excel',
                    className: 'btn btn-sm btn-success',
                    exportOptions: {
                        columns: ':not(:last-child)'
                    }
                },
                {
                    extend: 'pdf',
                    text: '<i class="fas fa-file-pdf"></i> PDF',
                    className: 'btn btn-sm btn-danger',
                    exportOptions: {
                        columns: ':not(:last-child)'
                    }
                },
                {
                    extend: 'print',
                    text: '<i class="fas fa-print"></i> Yazdır',
                    className: 'btn btn-sm btn-info',
                    exportOptions: {
                        columns: ':not(:last-child)'
                    }
                },
                {
                    extend: 'colvis',
                    text: '<i class="fas fa-eye"></i> Sütunlar',
                    className: 'btn btn-sm btn-primary'
                }
            ]
        });

        // Silme işlemi için event delegation
        $(document).on('click', '.delete-btn', function (e) {
            e.preventDefault();
            var id = $(this).data('id');
            var row = $(this).closest('tr');
            debugger
            Swal.fire({
                title: 'Emin misiniz?',
                text: "Bu kategoriyi silmek istediğinize emin misiniz?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Evet, sil!',
                cancelButtonText: 'İptal'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteMenuKategori", "Admin_MenuKategori")',
                        type: 'POST',
                        data: { id: id },
                        beforeSend: function () {
                            $('.delete-btn').prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i>');
                        },
                        success: function (response) {
                            if (response.success) {
                                table.row(row).remove().draw();
                                Swal.fire(
                                    'Silindi!',
                                    'Kategori başarıyla silindi.',
                                    'success'
                                );
                            } else {
                                Swal.fire(
                                    'Hata!',
                                    response.message || 'Silme işlemi sırasında bir hata oluştu.',
                                    'error'
                                );
                            }
                        },
                        error: function (xhr) {
                            Swal.fire(
                                'Hata!',
                                'Sunucu hatası: ' + xhr.statusText,
                                'error'
                            );
                        },
                        complete: function () {
                            $('.delete-btn').prop('disabled', false).html('<i class="fas fa-trash-alt"></i> Sil');
                        }
                    });
                }
            });
        });
    });
</script>

@{
    // Controller'da db nesnesini oluşturduğunuzdan emin olun
    var db = new RestaurantSystem_2_.Models.VT.RestaurantSystemEntities();
}