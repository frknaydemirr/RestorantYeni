@model RestaurantSystem_2_.Models.VT.Tbl_Kullanici

@{
    ViewBag.Title = "Kullanıcı Düzenle";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<!-- Bootstrap 5 CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- Font Awesome -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
<!-- SweetAlert2 -->
<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
<!-- Ek CSS -->
<style>
    .container-fluid {
        padding-right: var(--bs-gutter-x, 1.5rem);
        padding-left: var(--bs-gutter-x, 1.5rem);
    }

    .card {
        border-radius: 10px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.05);
        border: none;
        overflow: hidden;
    }

    .card-header {
        background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
        color: white;
        border-radius: 0 !important;
        padding: 1rem 1.5rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .card-body {
        padding: 2rem;
    }

    .form-control, .form-select {
        height: 50px;
        padding: 10px 15px;
        font-size: 16px;
        border-radius: 8px;
    }

        .form-control:focus, .form-select:focus {
            border-color: #2575fc;
            box-shadow: 0 0 0 0.25rem rgba(37, 117, 252, 0.25);
        }

    .btn-primary {
        background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
        border: none;
        padding: 12px 30px;
        font-weight: 600;
        border-radius: 8px;
        transition: all 0.3s;
    }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(37, 117, 252, 0.3);
        }

    .btn-outline-light {
        border-color: rgba(255,255,255,0.3);
        color: white;
        transition: all 0.3s;
    }

        .btn-outline-light:hover {
            background-color: rgba(255,255,255,0.1);
            border-color: white;
        }

    .form-label {
        font-weight: 600;
        margin-bottom: 8px;
    }

    /* Responsive Düzenlemeler */
    @@media (max-width: 768px) {
        .card-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 1rem;
        }

            .card-header h3 {
                font-size: 1.3rem;
            }

        .card-body {
            padding: 1.5rem;
        }
    }
</style>

<div class="container-fluid px-4">
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title mb-0"><i class="fas fa-user-edit me-2"></i>KULLANICI DÜZENLE</h3>
                    <div>
                        @Html.ActionLink("Listeye Dön", "Index", null, new { @class = "btn btn-sm btn-outline-light" })
                    </div>
                </div>

                <div class="card-body p-4">
                    @using (Html.BeginForm("Edit", "Admin_Kullanici", FormMethod.Post, new { id = "kullaniciForm", @class = "needs-validation", novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
                        @Html.HiddenFor(model => model.ID)

                        <div class="row g-4">
                            <div class="col-md-6">
                                <div class="mb-4">
                                    @Html.LabelFor(model => model.KullaniciAdi, "Kullanıcı Adı", htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.KullaniciAdi, new { htmlAttributes = new { @class = "form-control", placeholder = "Kullanıcı adını girin...", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.KullaniciAdi, "", new { @class = "text-danger small" })
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="mb-4">
                                    @Html.LabelFor(model => model.Sifre, "Şifre", htmlAttributes: new { @class = "form-label" })
                                    <div class="input-group">
                                        @Html.EditorFor(model => model.Sifre, new { htmlAttributes = new { @class = "form-control", placeholder = "Şifre girin...", type = "password", required = "required", id = "passwordField" } })
                                        <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Sifre, "", new { @class = "text-danger small" })
                                </div>
                            </div>
                        </div>

                        <div class="d-flex justify-content-end gap-3 mt-5 pt-3 border-top">
                            @Html.ActionLink("İptal", "Index", null, new { @class = "btn btn-outline-secondary px-4 py-2" })
                            <button type="submit" class="btn btn-primary px-4 py-2">
                                <i class="fas fa-save me-2"></i> Kaydet
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<!-- Bootstrap 5 JS Bundle with Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<!-- SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    // Şifre göster/gizle butonu
    document.getElementById('togglePassword').addEventListener('click', function() {
        const passwordField = document.getElementById('passwordField');
        const icon = this.querySelector('i');

        if (passwordField.type === 'password') {
            passwordField.type = 'text';
            icon.classList.remove('fa-eye');
            icon.classList.add('fa-eye-slash');
        } else {
            passwordField.type = 'password';
            icon.classList.remove('fa-eye-slash');
            icon.classList.add('fa-eye');
        }
    });

    // Form gönderim kontrolü
    document.getElementById('kullaniciForm').addEventListener('submit', function(e) {
        if (!this.checkValidity()) {
            e.preventDefault();
            e.stopPropagation();

            Swal.fire({
                icon: 'error',
                title: 'Eksik Bilgi!',
                text: 'Lütfen tüm zorunlu alanları doldurun.',
                confirmButtonColor: '#2575fc'
            });
        }

        this.classList.add('was-validated');
    });
</script>