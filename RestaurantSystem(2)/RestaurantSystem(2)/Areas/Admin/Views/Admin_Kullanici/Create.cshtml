@model RestaurantSystem_2_.Models.VT.Tbl_Kullanici

@{
    ViewBag.Title = "Yeni Kullanıcı Oluştur";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- Font Awesome -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h3 class="card-title mb-0">
                <i class="fas fa-user-plus me-2"></i>YENİ KULLANICI OLUŞTUR
            </h3>
        </div>

        <div class="card-body">
            @using (Html.BeginForm("Create", "Admin_Kullanici", FormMethod.Post, new { id = "kullaniciForm" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                <div class="row g-3">
                    <!-- Kullanıcı Adı -->
                    <div class="col-md-6">
                        <div class="mb-3">
                            @Html.LabelFor(model => model.KullaniciAdi, htmlAttributes: new { @class = "form-label fw-bold" })
                            @Html.EditorFor(model => model.KullaniciAdi, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control",
                               placeholder = "Kullanıcı adı giriniz",
                               required = "required",
                               autocomplete = "username"
                           }
                       })
                            
                            @Html.ValidationMessageFor(model => model.KullaniciAdi, "", new { @class = "text-danger small" })
                        </div>
                    </div>

                    <!-- Şifre -->
                    <div class="col-md-6">
                        <div class="mb-3">
                            @Html.LabelFor(model => model.Sifre, htmlAttributes: new { @class = "form-label fw-bold" })
                            <div class="input-group">
                                @Html.EditorFor(model => model.Sifre, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control",
                                   placeholder = "Şifre giriniz",
                                   type = "password",
                                   required = "required",
                                   autocomplete = "new-password",
                                   id = "passwordField"
                               }
                           })
                                <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            @Html.ValidationMessageFor(model => model.Sifre, "", new { @class = "text-danger small" })
                            <div class="form-text">Şifre en az 8 karakter olmalıdır</div>
                        </div>
                    </div>

                    <!-- Şifre Tekrar -->
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label fw-bold">Şifre Tekrar</label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="confirmPassword"
                                       placeholder="Şifreyi tekrar giriniz" required
                                       autocomplete="new-password">
                                <button class="btn btn-outline-secondary" type="button" id="toggleConfirmPassword">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            <div id="passwordMatchError" class="text-danger small" style="display:none;">Şifreler uyuşmuyor</div>
                        </div>
                    </div>
                </div>

                <div class="d-flex justify-content-end gap-3 mt-4 pt-3 border-top">
                    @Html.ActionLink("İptal", "Index", null, new { @class = "btn btn-outline-secondary px-4" })
                    <button type="submit" class="btn btn-primary px-4" id="submitBtn">
                        <i class="fas fa-save me-2"></i> Oluştur
                    </button>
                </div>
            }
        </div>
    </div>
</div>

<!-- jQuery ve Bootstrap JS -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    $(document).ready(function() {
        // Şifre göster/gizle
        $('#togglePassword').click(function() {
            const passwordField = $('#passwordField');
            const icon = $(this).find('i');
            if (passwordField.attr('type') === 'password') {
                passwordField.attr('type', 'text');
                icon.removeClass('fa-eye').addClass('fa-eye-slash');
            } else {
                passwordField.attr('type', 'password');
                icon.removeClass('fa-eye-slash').addClass('fa-eye');
            }
        });

        // Şifre tekrar göster/gizle
        $('#toggleConfirmPassword').click(function() {
            const confirmField = $('#confirmPassword');
            const icon = $(this).find('i');
            if (confirmField.attr('type') === 'password') {
                confirmField.attr('type', 'text');
                icon.removeClass('fa-eye').addClass('fa-eye-slash');
            } else {
                confirmField.attr('type', 'password');
                icon.removeClass('fa-eye-slash').addClass('fa-eye');
            }
        });

        // Şifre kontrolü
        $('#kullaniciForm').submit(function(e) {
            const password = $('#passwordField').val();
            const confirmPassword = $('#confirmPassword').val();

            if (password !== confirmPassword) {
                $('#passwordMatchError').show();
                e.preventDefault();
                return false;
            }
            return true;
        });

        // Gerçek zamanlı şifre kontrolü
        $('#confirmPassword').keyup(function() {
            const password = $('#passwordField').val();
            const confirmPassword = $(this).val();

            if (password !== confirmPassword) {
                $('#passwordMatchError').show();
                $('#submitBtn').prop('disabled', true);
            } else {
                $('#passwordMatchError').hide();
                $('#submitBtn').prop('disabled', false);
            }
        });
    });
</script>

<style>
    .card {
        border-radius: 0.5rem;
    }

    .card-header {
        border-radius: 0.5rem 0.5rem 0 0 !important;
    }

    .form-control {
        padding: 0.5rem 0.75rem;
    }

    .input-group-text {
        cursor: pointer;
    }
</style>